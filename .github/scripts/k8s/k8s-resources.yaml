apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-rclone
  labels:
    name: data-rclone
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 50Gi
  storageClassName: rclone
  csi:
    driver: csi-rclone
    volumeHandle: data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-rclone
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: rclone
  selector:
    matchLabels:
      name: data-rclone
---
apiVersion: v1
kind: Pod
metadata:
  name: package-file
spec:
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-rclone
  - name: results
    emptyDir: {}
  initContainers:
<<<<<<< HEAD
  - image: ghcr.io/almahmoud/gha-build-anvil-jupyter-amd64:linux-amd64
=======
  - image: &bioc.ROOT_CONTAINER
>>>>>>> 751bcec727c5dd85eaf21f7544813a09ea095f97
    imagePullPolicy: Always
    name: copy-packages
    volumeMounts:
      - mountPath: /mnt/pkgs
        name: data
      - mountPath: /mnt/results
        name: results
    command: ['/bin/sh']
    args:
    - "-c"
    - set -x; mkdir -p /tmp/pkglinks/ && ls /mnt/pkgs/* | sed 's#/mnt/pkgs/##g' | xargs -i bash -c "ln -s /mnt/pkgs/{} /tmp/pkglinks/{}"; Rscript -e 'tools::write_PACKAGES("/tmp/pkglinks", addFiles = TRUE, verbose = TRUE)' && cp /tmp/pkglinks/PACKAGES* /mnt/results/
  containers:
<<<<<<< HEAD
  - image: ghcr.io/almahmoud/gha-build-anvil-jupyter-amd64:linux-amd64
=======
  - image: &bioc.ROOT_CONTAINER
>>>>>>> 751bcec727c5dd85eaf21f7544813a09ea095f97
    imagePullPolicy: IfNotPresent
    name: sleep
    volumeMounts:
      - mountPath: /mnt/results
        name: results
    command: ['/bin/sh']
    args:
    - "-c"
    - sleep 10000
---
